/**
 * CTF Management API
 * API for managing CTF (Capture The Flag) games, teams, users, and services.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ResultRequest from '../model/ResultRequest';
import ResultResponse from '../model/ResultResponse';

/**
* Results service.
* @module api/ResultsApi
* @version 1.0.0
*/
export default class ResultsApi {

    /**
    * Constructs a new ResultsApi. 
    * @alias module:api/ResultsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createResult operation.
     * @callback module:api/ResultsApi~createResultCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new result
     * @param {module:model/ResultRequest} resultRequest 
     * @param {module:api/ResultsApi~createResultCallback} callback The callback function, accepting three arguments: error, data, response
     */
    createResult(resultRequest, callback) {
      let postBody = resultRequest;
      // verify the required parameter 'resultRequest' is set
      if (resultRequest === undefined || resultRequest === null) {
        throw new Error("Missing the required parameter 'resultRequest' when calling createResult");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/results', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getResultById operation.
     * @callback module:api/ResultsApi~getResultByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResultResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a result by ID
     * @param {String} resultId 
     * @param {module:api/ResultsApi~getResultByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResultResponse}
     */
    getResultById(resultId, callback) {
      let postBody = null;
      // verify the required parameter 'resultId' is set
      if (resultId === undefined || resultId === null) {
        throw new Error("Missing the required parameter 'resultId' when calling getResultById");
      }

      let pathParams = {
        'resultId': resultId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResultResponse;
      return this.apiClient.callApi(
        '/api/v1/results/{resultId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listResults operation.
     * @callback module:api/ResultsApi~listResultsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ResultResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all results
     * @param {module:api/ResultsApi~listResultsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ResultResponse>}
     */
    listResults(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ResultResponse];
      return this.apiClient.callApi(
        '/api/v1/results', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
