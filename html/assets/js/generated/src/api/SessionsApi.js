/**
 * CTF Management API
 * API for managing CTF (Capture The Flag) games, teams, users, and services.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiV1AuthSignInPost200Response from '../model/ApiV1AuthSignInPost200Response';
import ApiV1AuthSignInPostRequest from '../model/ApiV1AuthSignInPostRequest';
import ValidateSession200Response from '../model/ValidateSession200Response';

/**
* Sessions service.
* @module api/SessionsApi
* @version 1.0.0
*/
export default class SessionsApi {

    /**
    * Constructs a new SessionsApi. 
    * @alias module:api/SessionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1AuthSignInPost operation.
     * @callback module:api/SessionsApi~apiV1AuthSignInPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV1AuthSignInPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sign in user
     * Authenticates a user by user_name and password, starts a new session, and returns a session cookie.
     * @param {module:model/ApiV1AuthSignInPostRequest} apiV1AuthSignInPostRequest 
     * @param {module:api/SessionsApi~apiV1AuthSignInPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV1AuthSignInPost200Response}
     */
    apiV1AuthSignInPost(apiV1AuthSignInPostRequest, callback) {
      let postBody = apiV1AuthSignInPostRequest;
      // verify the required parameter 'apiV1AuthSignInPostRequest' is set
      if (apiV1AuthSignInPostRequest === undefined || apiV1AuthSignInPostRequest === null) {
        throw new Error("Missing the required parameter 'apiV1AuthSignInPostRequest' when calling apiV1AuthSignInPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiV1AuthSignInPost200Response;
      return this.apiClient.callApi(
        '/api/v1/auth/sign_in', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1AuthSignOutPost operation.
     * @callback module:api/SessionsApi~apiV1AuthSignOutPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV1AuthSignInPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Logout user
     * Authenticates a user by user_name and password, starts a new session, and returns a session cookie.
     * @param {module:api/SessionsApi~apiV1AuthSignOutPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV1AuthSignInPost200Response}
     */
    apiV1AuthSignOutPost(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV1AuthSignInPost200Response;
      return this.apiClient.callApi(
        '/api/v1/auth/sign_out', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the validateSession operation.
     * @callback module:api/SessionsApi~validateSessionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidateSession200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validate current session and return user role
     * Check if the current session is valid and return the user's role.
     * @param {module:api/SessionsApi~validateSessionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidateSession200Response}
     */
    validateSession(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ValidateSession200Response;
      return this.apiClient.callApi(
        '/api/v1/auth/session', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
