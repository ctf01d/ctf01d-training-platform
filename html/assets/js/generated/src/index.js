/**
 * CTF Management API
 * API for managing CTF (Capture The Flag) games, teams, users, and services.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiV1AuthSignInPost200Response from './model/ApiV1AuthSignInPost200Response';
import ApiV1AuthSignInPostRequest from './model/ApiV1AuthSignInPostRequest';
import ApiV1TeamsTeamIdUsersUserIdPut200Response from './model/ApiV1TeamsTeamIdUsersUserIdPut200Response';
import GameRequest from './model/GameRequest';
import GameResponse from './model/GameResponse';
import ProfileResponse from './model/ProfileResponse';
import ResultRequest from './model/ResultRequest';
import ResultResponse from './model/ResultResponse';
import ServiceRequest from './model/ServiceRequest';
import ServiceResponse from './model/ServiceResponse';
import TeamHistory from './model/TeamHistory';
import TeamRequest from './model/TeamRequest';
import TeamResponse from './model/TeamResponse';
import UniversityResponse from './model/UniversityResponse';
import UserRequest from './model/UserRequest';
import UserResponse from './model/UserResponse';
import ValidateSession200Response from './model/ValidateSession200Response';
import GamesApi from './api/GamesApi';
import ResultsApi from './api/ResultsApi';
import ServicesApi from './api/ServicesApi';
import SessionsApi from './api/SessionsApi';
import TeamsApi from './api/TeamsApi';
import UniversityApi from './api/UniversityApi';
import UsersApi from './api/UsersApi';


/**
* API for managing CTF (Capture The Flag) games, teams, users, and services..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CtfManagementApi = require('index'); // See note below*.
* var xxxSvc = new CtfManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CtfManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CtfManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CtfManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiV1AuthSignInPost200Response model constructor.
     * @property {module:model/ApiV1AuthSignInPost200Response}
     */
    ApiV1AuthSignInPost200Response,

    /**
     * The ApiV1AuthSignInPostRequest model constructor.
     * @property {module:model/ApiV1AuthSignInPostRequest}
     */
    ApiV1AuthSignInPostRequest,

    /**
     * The ApiV1TeamsTeamIdUsersUserIdPut200Response model constructor.
     * @property {module:model/ApiV1TeamsTeamIdUsersUserIdPut200Response}
     */
    ApiV1TeamsTeamIdUsersUserIdPut200Response,

    /**
     * The GameRequest model constructor.
     * @property {module:model/GameRequest}
     */
    GameRequest,

    /**
     * The GameResponse model constructor.
     * @property {module:model/GameResponse}
     */
    GameResponse,

    /**
     * The ProfileResponse model constructor.
     * @property {module:model/ProfileResponse}
     */
    ProfileResponse,

    /**
     * The ResultRequest model constructor.
     * @property {module:model/ResultRequest}
     */
    ResultRequest,

    /**
     * The ResultResponse model constructor.
     * @property {module:model/ResultResponse}
     */
    ResultResponse,

    /**
     * The ServiceRequest model constructor.
     * @property {module:model/ServiceRequest}
     */
    ServiceRequest,

    /**
     * The ServiceResponse model constructor.
     * @property {module:model/ServiceResponse}
     */
    ServiceResponse,

    /**
     * The TeamHistory model constructor.
     * @property {module:model/TeamHistory}
     */
    TeamHistory,

    /**
     * The TeamRequest model constructor.
     * @property {module:model/TeamRequest}
     */
    TeamRequest,

    /**
     * The TeamResponse model constructor.
     * @property {module:model/TeamResponse}
     */
    TeamResponse,

    /**
     * The UniversityResponse model constructor.
     * @property {module:model/UniversityResponse}
     */
    UniversityResponse,

    /**
     * The UserRequest model constructor.
     * @property {module:model/UserRequest}
     */
    UserRequest,

    /**
     * The UserResponse model constructor.
     * @property {module:model/UserResponse}
     */
    UserResponse,

    /**
     * The ValidateSession200Response model constructor.
     * @property {module:model/ValidateSession200Response}
     */
    ValidateSession200Response,

    /**
    * The GamesApi service constructor.
    * @property {module:api/GamesApi}
    */
    GamesApi,

    /**
    * The ResultsApi service constructor.
    * @property {module:api/ResultsApi}
    */
    ResultsApi,

    /**
    * The ServicesApi service constructor.
    * @property {module:api/ServicesApi}
    */
    ServicesApi,

    /**
    * The SessionsApi service constructor.
    * @property {module:api/SessionsApi}
    */
    SessionsApi,

    /**
    * The TeamsApi service constructor.
    * @property {module:api/TeamsApi}
    */
    TeamsApi,

    /**
    * The UniversityApi service constructor.
    * @property {module:api/UniversityApi}
    */
    UniversityApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
